# Generated by Django 5.2.3 on 2025-08-10 18:49

import cloudinary.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CrachaTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome do Template')),
                ('imagem_fundo', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='Imagem de Fundo')),
            ],
        ),
        migrations.CreateModel(
            name='EventoAcampamento',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=255)),
                ('tipo', models.CharField(choices=[('senior', 'Acampamento Sênior'), ('juvenil', 'Acampamento Juvenil'), ('mirim', 'Acampamento Mirim'), ('servos', 'Acampamento de Servos')], max_length=20)),
                ('data_inicio', models.DateField()),
                ('data_fim', models.DateField()),
                ('inicio_inscricoes', models.DateField()),
                ('fim_inscricoes', models.DateField()),
                ('valor_inscricao', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Valor da Inscrição')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('banner', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='Banner do Evento')),
            ],
        ),
        migrations.CreateModel(
            name='Paroquia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('cidade', models.CharField(max_length=100)),
                ('estado', models.CharField(max_length=2)),
                ('responsavel', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('telefone', models.CharField(max_length=20)),
                ('status', models.CharField(choices=[('ativa', 'Ativa'), ('inativa', 'Inativa')], default='ativa', max_length=10)),
                ('logo', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='Logo da Paróquia')),
            ],
        ),
        migrations.CreateModel(
            name='Participante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=150)),
                ('cpf', models.CharField(max_length=14, unique=True)),
                ('telefone', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('foto', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='Foto do Participante')),
                ('CEP', models.CharField(max_length=10, verbose_name='CEP')),
                ('endereco', models.CharField(max_length=255, verbose_name='Endereço')),
                ('numero', models.CharField(max_length=10, verbose_name='Número')),
                ('bairro', models.CharField(max_length=100, verbose_name='Bairro')),
                ('cidade', models.CharField(max_length=100, verbose_name='Cidade')),
                ('estado', models.CharField(choices=[('AC', 'AC'), ('AL', 'AL'), ('AP', 'AP'), ('AM', 'AM'), ('BA', 'BA'), ('CE', 'CE'), ('DF', 'DF'), ('ES', 'ES'), ('GO', 'GO'), ('MA', 'MA'), ('MT', 'MT'), ('MS', 'MS'), ('MG', 'MG'), ('PA', 'PA'), ('PB', 'PB'), ('PR', 'PR'), ('PE', 'PE'), ('PI', 'PI'), ('RJ', 'RJ'), ('RN', 'RN'), ('RS', 'RS'), ('RO', 'RO'), ('RR', 'RR'), ('SC', 'SC'), ('SP', 'SP'), ('SE', 'SE'), ('TO', 'TO')], max_length=2, verbose_name='Estado')),
                ('qr_token', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Token para QR Code')),
            ],
        ),
        migrations.CreateModel(
            name='PastoralMovimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='PoliticaPrivacidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texto', models.TextField(verbose_name='Texto da Política de Privacidade')),
                ('logo', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='Logo')),
                ('imagem_camisa', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='Imagem da Camisa')),
                ('imagem_1', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='Imagem 1 (opcional)')),
                ('imagem_2', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='Imagem 2 (opcional)')),
                ('cpf_cnpj', models.CharField(blank=True, max_length=18, null=True, verbose_name='CPF/CNPJ')),
                ('email_contato', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-mail de Contato')),
                ('telefone_contato', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefone de Contato')),
                ('endereco', models.CharField(blank=True, max_length=255, null=True, verbose_name='Endereço')),
                ('numero', models.CharField(blank=True, max_length=10, null=True, verbose_name='Número')),
                ('bairro', models.CharField(blank=True, max_length=100, null=True, verbose_name='Bairro')),
                ('estado', models.CharField(blank=True, max_length=2, null=True, verbose_name='Estado')),
            ],
        ),
        migrations.CreateModel(
            name='Inscricao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_inscricao', models.DateTimeField(auto_now_add=True)),
                ('foi_selecionado', models.BooleanField(default=False)),
                ('pagamento_confirmado', models.BooleanField(default=False)),
                ('inscricao_concluida', models.BooleanField(default=False)),
                ('inscricao_enviada', models.BooleanField(default=False)),
                ('responsavel_1_nome', models.CharField(blank=True, max_length=255, null=True)),
                ('responsavel_1_telefone', models.CharField(blank=True, max_length=20, null=True)),
                ('responsavel_1_grau_parentesco', models.CharField(blank=True, max_length=50, null=True)),
                ('responsavel_1_ja_e_campista', models.BooleanField(default=False)),
                ('responsavel_2_nome', models.CharField(blank=True, max_length=255, null=True)),
                ('responsavel_2_telefone', models.CharField(blank=True, max_length=20, null=True)),
                ('responsavel_2_grau_parentesco', models.CharField(blank=True, max_length=50, null=True)),
                ('responsavel_2_ja_e_campista', models.BooleanField(default=False)),
                ('contato_emergencia_nome', models.CharField(blank=True, max_length=255, null=True)),
                ('contato_emergencia_telefone', models.CharField(blank=True, max_length=20, null=True)),
                ('contato_emergencia_grau_parentesco', models.CharField(blank=True, max_length=50, null=True)),
                ('contato_emergencia_ja_e_campista', models.BooleanField(default=False)),
                ('evento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inscricoes.eventoacampamento')),
                ('paroquia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inscricoes', to='inscricoes.paroquia')),
                ('participante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inscricoes.participante')),
            ],
            options={
                'unique_together': {('participante', 'evento')},
            },
        ),
        migrations.CreateModel(
            name='Contato',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200)),
                ('telefone', models.CharField(max_length=20)),
                ('grau_parentesco', models.CharField(choices=[('mae', 'Mãe'), ('pai', 'Pai'), ('irmao', 'Irmão'), ('tio', 'Tio'), ('tia', 'Tia'), ('outro', 'Outro')], max_length=20)),
                ('ja_e_campista', models.BooleanField(default=False)),
                ('inscricao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contatos', to='inscricoes.inscricao')),
            ],
        ),
        migrations.CreateModel(
            name='Conjuge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(blank=True, max_length=200, null=True, verbose_name='Nome do Cônjuge')),
                ('conjuge_inscrito', models.CharField(choices=[('sim', 'Sim'), ('nao', 'Não')], default='nao', max_length=3, verbose_name='Cônjuge Inscrito?')),
                ('ja_e_campista', models.CharField(choices=[('sim', 'Sim'), ('nao', 'Não')], default='nao', max_length=3, verbose_name='Já é Campista?')),
                ('inscricao', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='conjuge', to='inscricoes.inscricao')),
            ],
        ),
        migrations.CreateModel(
            name='Pagamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metodo', models.CharField(choices=[('pix', 'Pix'), ('credito', 'Cartão de Crédito'), ('debito', 'Cartão de Débito'), ('dinheiro', 'Dinheiro')], default='pix', max_length=20)),
                ('valor', models.DecimalField(decimal_places=2, max_digits=8)),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('confirmado', 'Confirmado'), ('cancelado', 'Cancelado')], default='pendente', max_length=20)),
                ('data_pagamento', models.DateTimeField(blank=True, null=True)),
                ('transacao_id', models.CharField(blank=True, max_length=100)),
                ('comprovante', models.FileField(blank=True, null=True, upload_to='comprovantes_pagamento/', verbose_name='Comprovante de Pagamento')),
                ('inscricao', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='inscricoes.inscricao')),
            ],
        ),
        migrations.CreateModel(
            name='MercadoPagoConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_token', models.CharField(help_text='Token de acesso gerado no painel do Mercado Pago', max_length=255, verbose_name='Access Token')),
                ('public_key', models.CharField(help_text='Public Key do Mercado Pago', max_length=255, verbose_name='Public Key')),
                ('sandbox_mode', models.BooleanField(default=True, help_text='Use modo sandbox para testes', verbose_name='Sandbox')),
                ('paroquia', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='mp_config', to='inscricoes.paroquia')),
            ],
        ),
        migrations.AddField(
            model_name='eventoacampamento',
            name='paroquia',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eventos', to='inscricoes.paroquia'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tipo_usuario', models.CharField(choices=[('admin_geral', 'Administrador Geral'), ('admin_paroquia', 'Administrador da Paróquia')], max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='custom_user_set', related_query_name='custom_user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_set', related_query_name='custom_user', to='auth.permission', verbose_name='user permissions')),
                ('paroquia', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inscricoes.paroquia')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='InscricaoServos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_nascimento', models.DateField(verbose_name='Data de Nascimento')),
                ('altura', models.FloatField(blank=True, null=True, verbose_name='Altura (m)')),
                ('peso', models.FloatField(blank=True, null=True, verbose_name='Peso (kg)')),
                ('batizado', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='É batizado?')),
                ('estado_civil', models.CharField(blank=True, choices=[('solteiro', 'Solteiro(a)'), ('casado', 'Casado(a)'), ('divorciado', 'Divorciado(a)'), ('viuvo', 'Viúvo(a)'), ('uniao_estavel', 'União Estável')], max_length=20, null=True, verbose_name='Estado Civil')),
                ('casado_na_igreja', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='Casado na Igreja?')),
                ('nome_conjuge', models.CharField(blank=True, max_length=200, null=True, verbose_name='Nome do Cônjuge')),
                ('conjuge_inscrito', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='Cônjuge Inscrito?')),
                ('outra_pastoral_movimento', models.CharField(blank=True, max_length=200, null=True, verbose_name='Outra Pastoral/Movimento')),
                ('dizimista', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='Dizimista?')),
                ('crismado', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='Crismado?')),
                ('tamanho_camisa', models.CharField(blank=True, choices=[('PP', 'PP'), ('P', 'P'), ('M', 'M'), ('G', 'G'), ('GG', 'GG'), ('XG', 'XG'), ('XGG', 'XGG')], max_length=5, null=True, verbose_name='Tamanho da Camisa')),
                ('problema_saude', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='Possui algum problema de saúde?')),
                ('qual_problema_saude', models.CharField(blank=True, max_length=255, null=True, verbose_name='Qual problema de saúde?')),
                ('medicamento_controlado', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='Usa algum medicamento controlado?')),
                ('qual_medicamento_controlado', models.CharField(blank=True, max_length=255, null=True, verbose_name='Qual medicamento controlado?')),
                ('protocolo_administracao', models.CharField(blank=True, max_length=255, null=True, verbose_name='Protocolo de administração')),
                ('mobilidade_reduzida', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='Possui limitações físicas ou mobilidade reduzida?')),
                ('qual_mobilidade_reduzida', models.CharField(blank=True, max_length=255, null=True, verbose_name='Qual limitação/mobilidade reduzida?')),
                ('alergia_alimento', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='Possui alergia a algum alimento?')),
                ('qual_alergia_alimento', models.CharField(blank=True, max_length=255, null=True, verbose_name='Qual alimento causa alergia?')),
                ('alergia_medicamento', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='Possui alergia a algum medicamento?')),
                ('qual_alergia_medicamento', models.CharField(blank=True, max_length=255, null=True, verbose_name='Qual medicamento causa alergia?')),
                ('tipo_sanguineo', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-'), ('NS', 'Não sei')], max_length=3, null=True, verbose_name='Tipo Sanguíneo')),
                ('indicado_por', models.CharField(blank=True, max_length=200, null=True, verbose_name='Indicado Por')),
                ('informacoes_extras', models.TextField(blank=True, null=True, verbose_name='Informações extras')),
                ('inscricao', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='inscricoes.inscricao', verbose_name='Inscrição')),
                ('paroquia', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inscricoes.paroquia', verbose_name='Paróquia')),
                ('pastoral_movimento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inscricoes.pastoralmovimento', verbose_name='Pastoral/Movimento')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InscricaoSenior',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_nascimento', models.DateField(verbose_name='Data de Nascimento')),
                ('altura', models.FloatField(blank=True, null=True, verbose_name='Altura (m)')),
                ('peso', models.FloatField(blank=True, null=True, verbose_name='Peso (kg)')),
                ('batizado', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='É batizado?')),
                ('estado_civil', models.CharField(blank=True, choices=[('solteiro', 'Solteiro(a)'), ('casado', 'Casado(a)'), ('divorciado', 'Divorciado(a)'), ('viuvo', 'Viúvo(a)'), ('uniao_estavel', 'União Estável')], max_length=20, null=True, verbose_name='Estado Civil')),
                ('casado_na_igreja', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='Casado na Igreja?')),
                ('nome_conjuge', models.CharField(blank=True, max_length=200, null=True, verbose_name='Nome do Cônjuge')),
                ('conjuge_inscrito', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='Cônjuge Inscrito?')),
                ('outra_pastoral_movimento', models.CharField(blank=True, max_length=200, null=True, verbose_name='Outra Pastoral/Movimento')),
                ('dizimista', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='Dizimista?')),
                ('crismado', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='Crismado?')),
                ('tamanho_camisa', models.CharField(blank=True, choices=[('PP', 'PP'), ('P', 'P'), ('M', 'M'), ('G', 'G'), ('GG', 'GG'), ('XG', 'XG'), ('XGG', 'XGG')], max_length=5, null=True, verbose_name='Tamanho da Camisa')),
                ('problema_saude', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='Possui algum problema de saúde?')),
                ('qual_problema_saude', models.CharField(blank=True, max_length=255, null=True, verbose_name='Qual problema de saúde?')),
                ('medicamento_controlado', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='Usa algum medicamento controlado?')),
                ('qual_medicamento_controlado', models.CharField(blank=True, max_length=255, null=True, verbose_name='Qual medicamento controlado?')),
                ('protocolo_administracao', models.CharField(blank=True, max_length=255, null=True, verbose_name='Protocolo de administração')),
                ('mobilidade_reduzida', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='Possui limitações físicas ou mobilidade reduzida?')),
                ('qual_mobilidade_reduzida', models.CharField(blank=True, max_length=255, null=True, verbose_name='Qual limitação/mobilidade reduzida?')),
                ('alergia_alimento', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='Possui alergia a algum alimento?')),
                ('qual_alergia_alimento', models.CharField(blank=True, max_length=255, null=True, verbose_name='Qual alimento causa alergia?')),
                ('alergia_medicamento', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='Possui alergia a algum medicamento?')),
                ('qual_alergia_medicamento', models.CharField(blank=True, max_length=255, null=True, verbose_name='Qual medicamento causa alergia?')),
                ('tipo_sanguineo', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-'), ('NS', 'Não sei')], max_length=3, null=True, verbose_name='Tipo Sanguíneo')),
                ('indicado_por', models.CharField(blank=True, max_length=200, null=True, verbose_name='Indicado Por')),
                ('informacoes_extras', models.TextField(blank=True, null=True, verbose_name='Informações extras')),
                ('inscricao', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='inscricoes.inscricao', verbose_name='Inscrição')),
                ('paroquia', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inscricoes.paroquia', verbose_name='Paróquia')),
                ('pastoral_movimento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inscricoes.pastoralmovimento', verbose_name='Pastoral/Movimento')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InscricaoMirim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_nascimento', models.DateField(verbose_name='Data de Nascimento')),
                ('altura', models.FloatField(blank=True, null=True, verbose_name='Altura (m)')),
                ('peso', models.FloatField(blank=True, null=True, verbose_name='Peso (kg)')),
                ('batizado', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='É batizado?')),
                ('estado_civil', models.CharField(blank=True, choices=[('solteiro', 'Solteiro(a)'), ('casado', 'Casado(a)'), ('divorciado', 'Divorciado(a)'), ('viuvo', 'Viúvo(a)'), ('uniao_estavel', 'União Estável')], max_length=20, null=True, verbose_name='Estado Civil')),
                ('casado_na_igreja', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='Casado na Igreja?')),
                ('nome_conjuge', models.CharField(blank=True, max_length=200, null=True, verbose_name='Nome do Cônjuge')),
                ('conjuge_inscrito', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='Cônjuge Inscrito?')),
                ('outra_pastoral_movimento', models.CharField(blank=True, max_length=200, null=True, verbose_name='Outra Pastoral/Movimento')),
                ('dizimista', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='Dizimista?')),
                ('crismado', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='Crismado?')),
                ('tamanho_camisa', models.CharField(blank=True, choices=[('PP', 'PP'), ('P', 'P'), ('M', 'M'), ('G', 'G'), ('GG', 'GG'), ('XG', 'XG'), ('XGG', 'XGG')], max_length=5, null=True, verbose_name='Tamanho da Camisa')),
                ('problema_saude', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='Possui algum problema de saúde?')),
                ('qual_problema_saude', models.CharField(blank=True, max_length=255, null=True, verbose_name='Qual problema de saúde?')),
                ('medicamento_controlado', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='Usa algum medicamento controlado?')),
                ('qual_medicamento_controlado', models.CharField(blank=True, max_length=255, null=True, verbose_name='Qual medicamento controlado?')),
                ('protocolo_administracao', models.CharField(blank=True, max_length=255, null=True, verbose_name='Protocolo de administração')),
                ('mobilidade_reduzida', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='Possui limitações físicas ou mobilidade reduzida?')),
                ('qual_mobilidade_reduzida', models.CharField(blank=True, max_length=255, null=True, verbose_name='Qual limitação/mobilidade reduzida?')),
                ('alergia_alimento', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='Possui alergia a algum alimento?')),
                ('qual_alergia_alimento', models.CharField(blank=True, max_length=255, null=True, verbose_name='Qual alimento causa alergia?')),
                ('alergia_medicamento', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='Possui alergia a algum medicamento?')),
                ('qual_alergia_medicamento', models.CharField(blank=True, max_length=255, null=True, verbose_name='Qual medicamento causa alergia?')),
                ('tipo_sanguineo', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-'), ('NS', 'Não sei')], max_length=3, null=True, verbose_name='Tipo Sanguíneo')),
                ('indicado_por', models.CharField(blank=True, max_length=200, null=True, verbose_name='Indicado Por')),
                ('informacoes_extras', models.TextField(blank=True, null=True, verbose_name='Informações extras')),
                ('inscricao', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='inscricoes.inscricao', verbose_name='Inscrição')),
                ('paroquia', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inscricoes.paroquia', verbose_name='Paróquia')),
                ('pastoral_movimento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inscricoes.pastoralmovimento', verbose_name='Pastoral/Movimento')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InscricaoJuvenil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_nascimento', models.DateField(verbose_name='Data de Nascimento')),
                ('altura', models.FloatField(blank=True, null=True, verbose_name='Altura (m)')),
                ('peso', models.FloatField(blank=True, null=True, verbose_name='Peso (kg)')),
                ('batizado', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='É batizado?')),
                ('estado_civil', models.CharField(blank=True, choices=[('solteiro', 'Solteiro(a)'), ('casado', 'Casado(a)'), ('divorciado', 'Divorciado(a)'), ('viuvo', 'Viúvo(a)'), ('uniao_estavel', 'União Estável')], max_length=20, null=True, verbose_name='Estado Civil')),
                ('casado_na_igreja', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='Casado na Igreja?')),
                ('nome_conjuge', models.CharField(blank=True, max_length=200, null=True, verbose_name='Nome do Cônjuge')),
                ('conjuge_inscrito', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='Cônjuge Inscrito?')),
                ('outra_pastoral_movimento', models.CharField(blank=True, max_length=200, null=True, verbose_name='Outra Pastoral/Movimento')),
                ('dizimista', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='Dizimista?')),
                ('crismado', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='Crismado?')),
                ('tamanho_camisa', models.CharField(blank=True, choices=[('PP', 'PP'), ('P', 'P'), ('M', 'M'), ('G', 'G'), ('GG', 'GG'), ('XG', 'XG'), ('XGG', 'XGG')], max_length=5, null=True, verbose_name='Tamanho da Camisa')),
                ('problema_saude', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='Possui algum problema de saúde?')),
                ('qual_problema_saude', models.CharField(blank=True, max_length=255, null=True, verbose_name='Qual problema de saúde?')),
                ('medicamento_controlado', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='Usa algum medicamento controlado?')),
                ('qual_medicamento_controlado', models.CharField(blank=True, max_length=255, null=True, verbose_name='Qual medicamento controlado?')),
                ('protocolo_administracao', models.CharField(blank=True, max_length=255, null=True, verbose_name='Protocolo de administração')),
                ('mobilidade_reduzida', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='Possui limitações físicas ou mobilidade reduzida?')),
                ('qual_mobilidade_reduzida', models.CharField(blank=True, max_length=255, null=True, verbose_name='Qual limitação/mobilidade reduzida?')),
                ('alergia_alimento', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='Possui alergia a algum alimento?')),
                ('qual_alergia_alimento', models.CharField(blank=True, max_length=255, null=True, verbose_name='Qual alimento causa alergia?')),
                ('alergia_medicamento', models.CharField(blank=True, choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, null=True, verbose_name='Possui alergia a algum medicamento?')),
                ('qual_alergia_medicamento', models.CharField(blank=True, max_length=255, null=True, verbose_name='Qual medicamento causa alergia?')),
                ('tipo_sanguineo', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-'), ('NS', 'Não sei')], max_length=3, null=True, verbose_name='Tipo Sanguíneo')),
                ('indicado_por', models.CharField(blank=True, max_length=200, null=True, verbose_name='Indicado Por')),
                ('informacoes_extras', models.TextField(blank=True, null=True, verbose_name='Informações extras')),
                ('inscricao', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='inscricoes.inscricao', verbose_name='Inscrição')),
                ('paroquia', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inscricoes.paroquia', verbose_name='Paróquia')),
                ('pastoral_movimento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inscricoes.pastoralmovimento', verbose_name='Pastoral/Movimento')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VideoEventoAcampamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=255)),
                ('arquivo', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='Vídeo do Evento')),
                ('evento', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='video', to='inscricoes.eventoacampamento')),
            ],
        ),
    ]
